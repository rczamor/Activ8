<?php
// $Id: node_gallery_slideshow.module,v 1.1 2010/12/14 13:52:09 scroogie Exp $
/*
 * @file
 * Simple jquery based slideshow.
 */
/**
 * Implements the page callback to display a gallery slideshow.
 *
 * @param object $node Node object of the current gallery.
 */
function node_gallery_slideshow_page($gallery, $start_image) {
  module_load_include('inc', 'node_gallery', 'node_gallery');
  if (!$start_image) {
    $start_image = 1;
  }
  drupal_set_title(t('Slideshow of') . ' ' . $gallery->title);
  drupal_set_breadcrumb(array(
    l(t('Home'), NULL),
    l(t('Galleries'), 'galleries'),
    l(t('!user\'s Galleries', array('!user' => $gallery->name)), 'galleries/'. $gallery->uid),
    l($gallery->title, 'node/'. $gallery->nid),
    l(t('Slideshow'), 'node/'. $gallery->nid . '/slideshow'),
  ));
  return theme('node_gallery_slideshow', $gallery->nid, $start_image);
}

function node_gallery_slideshow_json_get_image_chunk($gallery, $chunk_size, $chunk) {
  $chunk_size = (int)$chunk_size;
  $chunk = (int)$chunk;
  if ($chunk_size <= 0 || $chunk < 0) {
    return;
  }
  module_load_include('inc', 'node_gallery', 'node_gallery');
  $images = array_chunk(node_gallery_get_images($gallery), $chunk_size);
  $slideshow_images = array();
  foreach ($images[$chunk] as $key => $image) {
    $slideshow_images[] = array(
      'nid' => $image->nid,
      'title' => $image->title,
      'thumb' => imagecache_create_path('node-gallery-slideshow-microthumb', $image->filepath),
      'display' =>  imagecache_create_path('node-gallery-slideshow-display', $image->filepath)
    );
  }
  unset($images);
  return drupal_json($slideshow_images);
}

/**
 * Implements hook_menu() to add a slideshow menu entry to gallery pages and
 * the administrator settings.
 */
function node_gallery_slideshow_menu() {
  $items = array();
  $items['node/%node_gallery_gallery/slideshow'] = array(
    'title' => 'View slideshow',
    'page callback' => 'node_gallery_slideshow_page',
    'page arguments' => array(1, 3),
    'access arguments' => array(NODE_GALLERY_PERM_VIEW_GALLERY),
    'type' => MENU_LOCAL_TASK,
  );
  $items['node-gallery/json/gallery/%node_gallery_gallery/chunk/%/%'] = array(
    'page callback' => 'node_gallery_slideshow_json_get_image_chunk',
    'page arguments' => array(3, 5, 6),
    'access callback' => 'node_gallery_user_access',
    'access arguments' => array('view', 3),
    'type' => MENU_CALLBACK,
  );
  $items['admin/settings/node_gallery/slideshow'] = array(
    'title' => 'Slideshow Settings',
    'description' => "Manage node gallery's slideshow settings.",
    'page callback' => 'drupal_get_form',
    'page arguments' => array('node_gallery_slideshow_settings_form'),
    'access arguments' => array(NODE_GALLERY_PERM_ADMIN_GALLERY),
    'type' => MENU_LOCAL_TASK,
  );
  return $items;
}


/**
 * Administration for the node gallery slideshow settings.
 * @return $form Form array.
 */
function node_gallery_slideshow_settings_form() {
  $form = array();
  $sec = t('sec.');
  $form['node_gallery_slideshow_initial_interval'] = array(
    '#type' => 'select',
    '#options' => array(
        '1000' => '1 ' . $sec,
        '2000' => '2 ' . $sec,
        '3000' => '3 ' . $sec,
        '4000' => '4 ' . $sec,
        '5000' => '5 ' . $sec,
    ),
    '#title' => t('Enter the initial interval time for slideshows.'),
    '#default_value' => variable_get('node_gallery_slideshow_initial_interval', 3000),
    '#description' => t('The time after which the next image will be displayed in the slideshow.'),
  );
  $form['node_gallery_slideshow_preload_count'] = array(
    '#type' => 'textfield',
    '#maxlength' => 5,
    '#size' => 5,
    '#title' => t('Number of images to preload.'),
    '#default_value' => variable_get('node_gallery_slideshow_preload_count', 10),
    '#description' => t('The number of images that will be cached in the clients browser. Trades loading time for memory on the client.'),
  );
  $form['node_gallery_slideshow_enable_microthumb_navigator'] = array(
    '#type' => 'checkbox',
    '#title' => t('Enable microthumb navigator'),
    '#default_value' => variable_get('node_gallery_slideshow_enable_microthumb_navigator', TRUE),
    '#description' => t('Enable a row of thumbnails below the slideshow, allowing preview and navigation.'),
  );
  $form['node_gallery_slideshow_microthumb_count'] = array(
    '#type' => 'textfield',
    '#maxlength' => 5,
    '#size' => 5,
    '#title' => t('Number of thumbnails in microthumb navigator.'),
    '#default_value' => variable_get('node_gallery_slideshow_microthumb_count', 7),
    '#description' => t('Enter an uneven number of images to display in the navigator.'),
  );
  $form['streaming_options'] = array(
    '#type' => 'fieldset',
    '#title' => 'Streaming options',
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
    '#description' => t('The slideshow streams information about images, such as the filenames, in the background. You can finetune this behaviour here.'),
  );
  $form['streaming_options']['node_gallery_slideshow_chunk_size'] = array(
    '#type' => 'textfield',
    '#maxlength' => 5,
    '#size' => 5,
    '#title' => t('Number of images to retrieve per asynchronous request.'),
    '#default_value' => variable_get('node_gallery_slideshow_chunk_size', 100),
  );
  $form['streaming_options']['node_gallery_slideshow_retrieve_interval'] = array(
    '#type' => 'textfield',
    '#maxlength' => 5,
    '#size' => 5,
    '#title' => t('Number of images to retrieve per asynchronous request.'),
    '#default_value' => variable_get('node_gallery_slideshow_retrieve_interval', 100),
    '#description' => t('Delay between requests in milliseconds'),
  );
  return system_settings_form($form);
}

/**
 * Validate the input form the settings form.
 */
function node_gallery_slideshow_settings_form_validate($form, &$form_state) {
  if (!is_numeric($form_state['values']['node_gallery_slideshow_initial_interval']) ||
      !in_array($form_state['values']['node_gallery_slideshow_initial_interval'], 
              array(1000, 2000, 3000, 4000, 5000))) {     
    form_error($form['node_gallery_slideshow_initial_interval'], t('Invalid interval time.'));
  }
  if (!is_numeric($form_state['values']['node_gallery_slideshow_preload_count']) ||
          $form_state['values']['node_gallery_slideshow_preload_count'] < 0) {
    form_error($form['node_gallery_slideshow_preload_count'], t('Preload count must be a positive number.'));
  }
  if (!is_numeric($form_state['values']['node_gallery_slideshow_microthumb_count']) ||
          $form_state['values']['node_gallery_slideshow_microthumb_count'] < 0) {
    form_error($form['node_gallery_slideshow_microthumb_count'], t('Thumbnail count must be a positive number.'));
  }
  if (!is_numeric($form_state['values']['node_gallery_slideshow_chunk_size']) ||
          $form_state['values']['node_gallery_slideshow_chunk_size'] < 0) {
    form_error($form['streaming_options']['node_gallery_slideshow_chunk_size'], t('Chunk size must be a positive number.'));
  }
  if (!is_numeric($form_state['values']['node_gallery_slideshow_retrieve_interval']) ||
          $form_state['values']['node_gallery_slideshow_retrieve_interval'] < 0) {
    form_error($form['streaming_options']['node_gallery_slideshow_retrieve_interval'], t('Retrieve interval must be a positive number.'));
  }
  if ($form_state['values']['node_gallery_slideshow_microthumb_count'] > $form_state['values']['node_gallery_slideshow_chunk_size']) {
    form_error($form['streaming_options']['node_gallery_slideshow_chunk_size'], t('Cannot display more thumbnails than images are streamed per request.'));
  }
}

/**
 * Registers the theme function to output a node gallery slideshow.
 */
function node_gallery_slideshow_theme() {
  $path = drupal_get_path('module', 'node_gallery_slideshow') ."/theme";
  $file = 'theme.inc';
  $themes = array(
    'node_gallery_slideshow' => array(
        'template' => 'node-gallery-slideshow',
        'arguments' => array('gid' => NULL, 'start_image' => 1),
        'path' => $path,
        'file' => $file,
    ),
  );
  return $themes;
}

/**
 * Implements hook_theme_registry_alter() to override the image navigator.
 */
function node_gallery_slideshow_theme_registry_alter(&$theme_registry) {
  $path = drupal_get_path('module', 'node_gallery_slideshow') ."/theme";
  $file = 'theme.inc';
  $theme_registry['node_gallery_image_navigator'] = array(
    'template' => 'node-gallery-image-navigator-slideshow',
    'arguments' => array('navigator' => NULL, 'image' => NULL),
    'preprocess functions' => array('template_preprocess_node_gallery_image_navigator_slideshow'),
    'path' => $path,
    'file' => $file,
  );
}

/**
 * Implements hook_imagecache_default_presets(). Default imagecache presets for the slideshows.
 * @see hook_imagecache_default_presets()
 */
function node_gallery_slideshow_imagecache_default_presets() {
  $presets = array();
  $presets['node-gallery-slideshow-display'] = array(
    'presetname' => 'node-gallery-slideshow-display',
    'actions' => array(
      0 => array(
        'weight' => '0',
        'module' => 'imagecache',
        'action' => 'imagecache_scale',
        'data' => array(
          'width' => '600',
          'height' => '600',
        ),
      ),
    ),
  );
  $presets['node-gallery-slideshow-microthumb'] = array(
    'presetname' => 'node-gallery-slideshow-microthumb',
    'actions' => array(
      0 => array(
        'weight' => '0',
        'module' => 'imagecache',
        'action' => 'imagecache_scale_and_crop',
        'data' => array(
          'width' => '60',
          'height' => '60',
        ),
      ),
    ),
  );
  return $presets;
}
